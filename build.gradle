buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }

        jcenter()

        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
        classpath 'io.franzbecker:gradle-lombok:1.8'
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: "io.franzbecker.gradle-lombok"

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.7'

    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-web')

    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    compile 'io.springfox:springfox-swagger2:2.5.0'
    compile 'io.springfox:springfox-swagger-ui:2.5.0'

    testCompile "junit:junit:4.11"
}

jar{ // https://discuss.gradle.org/t/war-layout/6778
    enabled = true

    destinationDir = file("./build")
    archiveName = "quick-start.jar"
}

task fatJar(type: Jar) {
    manifest {
        attributes(
                'Implementation-Title': 'Quick Start API',
                'Implementation-Version': 0.1,
                'Main-Class': 'quickstart.Application'
        )
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

war {
    dependsOn 'jar'

    // jar.outputs.files - original jar file

    destinationDir = file("./build")
    baseName = 'quick-start' // Used in RPM naming
    archiveName = "quick-start.war"
    manifest {
        attributes(
                'Implementation-Title': 'Quick Start API',
                'Implementation-Version': 0.1,
                'Main-Class': 'quickstart.Application'
        )
    }
}
